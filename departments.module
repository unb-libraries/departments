<?php
/**
 * @file
 * Drupal needs this blank file.
 */

/**
 * Implements hook_menu().
 */
function departments_menu() {

  $items = array();
  $items['departments.xml'] = array(
    'title' => 'Departments',
    'page callback' => '_department_list_json',
    'access arguments' => array('view departments'),
    'type' => MENU_CALLBACK,
  );
  $items['staff.xml'] = array(
    'title' => 'Staff',
    'page callback' => '_staff_list_alpha_json',
    'access arguments' => array('view departments'),
    'type' => MENU_CALLBACK,
  );
  $items['liasons.xml'] = array(
    'title' => 'Library Liasons',
    'page callback' => '_library_liasons_list_json',
    'access arguments' => array('view departments'),
    'type' => MENU_CALLBACK,
  );
  return $items;
}

/**
 * Implements hook_permission().
 */
function departments_permission() {
  return array(
    'view departments' => array(
      'title' => t('View Departments JSON'),
    ),
  );
}

/**
 * Creates alphabetical list of staff in JSON format
 */
function _staff_list_alpha_json() {
  $staff_query = new EntityFieldQuery();
  $staff_query->entityCondition('entity_type', 'user')
  ->propertyCondition('status', 1) //active users only
  ->fieldCondition('field_display_on_staff_directory', 'value', 1, '=')
  ->fieldOrderBy('field_last_name', 'value', 'ASC');
  $staff_result = $staff_query->execute();

  $staff_list = array();
  foreach ($staff_result['user'] as $uid => $staff) {
    $staff_user = user_load($uid);
    $staff_info = array(
      'first_name' => $staff_user->field_first_name['und']['0']['safe_value'],
      'last_name' => $staff_user->field_last_name['und']['0']['safe_value'],
      'position' => $staff_user->field_position_title['und']['0']['safe_value'],
      'phone' => $staff_user->field_phone_number['und']['0']['safe_value'],
      'on_leave' => $staff_user->field_on_leave['und']['0']['value'],
      'email_id' => explode("@", $staff_user->mail)[0],
      'head' => FALSE,
    );
    $staff_list[] = $staff_info;
  }

  print json_encode($staff_list);

  return;
}

/**
 * Creates list of departments in JSON format
 */
function _department_list_json() {
  $department_query = new EntityFieldQuery();
  $department_query->entityCondition('entity_type', 'taxonomy_term')
  ->entityCondition('bundle', 'library_departments')
  ->propertyOrderBy('name', 'ASC');
  $departments_result = $department_query->execute();

  $departments = array();
  foreach ($departments_result['taxonomy_term'] as $department) {
    $department_term = taxonomy_term_load($department->tid);
    $department_info = array(
      'name' => $department_term->name,
      'location' => $department_term->field_department_location['und'][0]['safe_value'],
      'phone' => $department_term->field_department_phone['und'][0]['safe_value'],
      'fax' => $department_term->field_department_fax['und'][0]['safe_value'],
      'email' => $department_term->field_department_email['und'][0]['safe_value'],
      'website' => $department_term->field_department_website['und'][0]['safe_value'],
      'html_id' => $department_term->field_short_name['und'][0]['safe_value'],
      'members' => array(),
    );

    $dept_head_query = new EntityFieldQuery();
    $dept_head_query->entityCondition('entity_type', 'user')
    ->propertyCondition('status', 1) //active users only
    ->fieldCondition('field_library_department_head', 'tid', $department->tid, '=')
    ->fieldCondition('field_display_on_staff_directory', 'value', 1, '=')
    ->fieldOrderBy('field_last_name', 'value', 'ASC');
    $dept_head_result = $dept_head_query->execute();

    foreach ($dept_head_result['user'] as $uid => $dept_head) {
      $dept_head_user = user_load($uid);
      $dept_head_info = array(
        'first_name' => $dept_head_user->field_first_name['und']['0']['safe_value'],
        'last_name' => $dept_head_user->field_last_name['und']['0']['safe_value'],
        'position' => $dept_head_user->field_position_title['und']['0']['safe_value'],
        'phone' => $dept_head_user->field_phone_number['und']['0']['safe_value'],
        'on_leave' => $dept_head_user->field_on_leave['und']['0']['value'],
        'email_id' => explode("@", $dept_head_user->mail)[0],
        'head' => TRUE,
      );
      $department_info['members'][] = $dept_head_info;
    }

    $member_query = new EntityFieldQuery();
    $member_query->entityCondition('entity_type', 'user')
    ->propertyCondition('status', 1) //active users only
    ->fieldCondition('field_library_department', 'tid', $department->tid, '=')
    ->fieldCondition('field_display_on_staff_directory', 'value', 1, '=')
    ->fieldOrderBy('field_last_name', 'value', 'ASC');
    $member_result = $member_query->execute();

    foreach ($member_result['user'] as $uid => $member) {
      $member_user = user_load($uid);
      $member_info = array(
        'first_name' => $member_user->field_first_name['und']['0']['safe_value'],
        'last_name' => $member_user->field_last_name['und']['0']['safe_value'],
        'position' => $member_user->field_position_title['und']['0']['safe_value'],
        'phone' => $member_user->field_phone_number['und']['0']['safe_value'],
        'on_leave' => $member_user->field_on_leave['und']['0']['value'],
        'email_id' => explode("@", $member_user->mail)[0],
        'head' => FALSE,
      );
      $department_info['members'][] = $member_info;
    }

    $departments[] = $department_info;
  }

  print json_encode($departments);

  return;
}

/**
 * Creates listing of library liasons
 */
function _library_liasons_list_json() {

  $campuses = array('UNBF' => 'FR', 'UNBSJ' => 'SJ', 'STU' => 'STU');
  $liason_list = array();

  foreach ($campuses as $campus => $campus_id) {

    $faculties_query = new EntityFieldQuery();
    $faculties_query->entityCondition('entity_type', 'taxonomy_term')
    ->entityCondition('bundle', 'faculties')
    ->fieldCondition('field_campus', 'value', $campus, '=')
    ->propertyOrderBy('name', 'ASC');
    $faculties_result = $faculties_query->execute();

    $faculties = array();
    foreach ($faculties_result['taxonomy_term'] as $faculty) {
      $faculty_term = taxonomy_term_load($faculty->tid);
      $faculty_info = array(
        'name' => $faculty_term->name,
        'department_rep_name' => $faculty_term->field_department_rep_name['und'][0]['safe_value'],
        'department_rep_phone' => $faculty_term->field_department_rep_phone['und'][0]['safe_value'],
        'department_rep_email' => $faculty_term->field_department_rep_email['und'][0]['safe_value'],
        'library_liason' => array(),
      );

      $liason_query = new EntityFieldQuery();
      $liason_query->entityCondition('entity_type', 'user')
      ->fieldCondition('field_library_liason', 'tid', $faculty->tid, '=');
      $liason_result = $liason_query->execute();

      $liason_user = user_load(array_keys($liason_result['user'])[0]);
      $liason_info = array(
        'first_name' => $liason_user->field_first_name['und']['0']['safe_value'],
        'last_name' => $liason_user->field_last_name['und']['0']['safe_value'],
        'phone' => $liason_user->field_phone_number['und']['0']['safe_value'],
        'email_id' => explode("@", $liason_user->mail)[0],
      );

      $faculty_info['library_liason'] = $liason_info;

      $faculties[] = $faculty_info;
    }

    $liason_list[$campus_id] = $faculties;
  }

  print json_encode($liason_list);

  return;
}

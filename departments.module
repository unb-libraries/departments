<?php
/**
 * @file
 * Code for the Departments feature.
 */

include_once 'departments.features.inc';

/**
 * Implements hook_menu().
 */
function departments_menu() {

  $items = array();
  $items['departments.xml'] = array(
    'title' => 'Departments',
    'page callback' => '_department_list_json',
    'access arguments' => array('view departments'),
    'type' => MENU_CALLBACK,
  );
  $items['staff.xml'] = array(
    'title' => 'Staff',
    'page callback' => '_staff_list_alpha_json',
    'access arguments' => array('view departments'),
    'type' => MENU_CALLBACK,
  );
  $items['liaisons.xml'] = array(
    'title' => 'Library Liaisons',
    'page callback' => '_library_liaisons_list_json',
    'access arguments' => array('view departments'),
    'type' => MENU_CALLBACK,
  );
  return $items;
}

/**
 * Implements hook_permission().
 */
function departments_permission() {
  return array(
    'view departments' => array(
      'title' => t('View Departments JSON'),
    ),
  );
}

/**
 * Creates alphabetical list of staff in JSON format
 */
function _staff_list_alpha_json() {
  $staff_query = new EntityFieldQuery();
  $staff_query->entityCondition('entity_type', 'user')
  ->propertyCondition('status', 1) //active users only
  ->fieldCondition('field_display_on_staff_directory', 'value', 1, '=')
  ->fieldOrderBy('field_last_name', 'value', 'ASC');
  $staff_result = $staff_query->execute();

  $staff_list = array();
  foreach ($staff_result['user'] as $uid => $staff) {
    $staff_list[] = _get_user_info_from_uid($uid);
  }

  print json_encode($staff_list);

  return;
}

/**
 * Creates list of departments in JSON format
 */
function _department_list_json() {
  $department_query = new EntityFieldQuery();
  $department_query->entityCondition('entity_type', 'taxonomy_term')
  ->entityCondition('bundle', 'library_departments')
  ->propertyOrderBy('name', 'ASC');
  $departments_result = $department_query->execute();

  $departments = array();
  foreach ($departments_result['taxonomy_term'] as $department) {
    $department_term = entity_metadata_wrapper(taxonomy_term, taxonomy_term_load($department->tid));
    $department_info = array(
      'name' => $department_term->name->value(array('sanitize' => TRUE)),
      'location' => $department_term->field_department_location->value(array('sanitize' => TRUE)),
      'phone' => $department_term->field_department_phone->value(array('sanitize' => TRUE)),
      'fax' => $department_term->field_department_fax->value(array('sanitize' => TRUE)),
      'email' => $department_term->field_department_email->value(array('sanitize' => TRUE)),
      'website' => $department_term->field_department_website->value(array('sanitize' => TRUE)),
      'html_id' => $department_term->field_short_name->value(array('sanitize' => TRUE)),
      'members' => array(),
    );

    $dept_head_query = new EntityFieldQuery();
    $dept_head_query->entityCondition('entity_type', 'user')
    ->propertyCondition('status', 1) //active users only
    ->fieldCondition('field_library_department_head', 'tid', $department->tid, '=')
    ->fieldCondition('field_display_on_staff_directory', 'value', 1, '=')
    ->fieldOrderBy('field_last_name', 'value', 'ASC');
    $dept_head_result = $dept_head_query->execute();

    if (array_key_exists('user', $dept_head_result)) {
      foreach ($dept_head_result['user'] as $uid => $dept_head) {
        $department_info['members'][] = _get_user_info_from_uid($uid, array('head' => TRUE));
      }
    }

    $member_query = new EntityFieldQuery();
    $member_query->entityCondition('entity_type', 'user')
    ->propertyCondition('status', 1) //active users only
    ->fieldCondition('field_library_department', 'tid', $department->tid, '=')
    ->fieldCondition('field_display_on_staff_directory', 'value', 1, '=')
    ->fieldOrderBy('field_last_name', 'value', 'ASC');
    $member_result = $member_query->execute();

    if (array_key_exists('user', $member_result)) {
      foreach ($member_result['user'] as $uid => $member) {
        $department_info['members'][] = _get_user_info_from_uid($uid);
      }
    }

    $departments[] = $department_info;
  }

  print json_encode($departments);

  return;
}

/**
 * Creates listing of library liaisons
 */
function _library_liaisons_list_json() {

  $campuses = array('UNBF' => 'FR', 'UNBSJ' => 'SJ', 'STU' => 'STU');
  $liaison_list = array();

  foreach ($campuses as $campus => $campus_id) {

    $faculties_query = new EntityFieldQuery();
    $faculties_query->entityCondition('entity_type', 'taxonomy_term')
    ->entityCondition('bundle', 'faculties')
    ->fieldCondition('field_campus', 'value', $campus, '=')
    ->propertyOrderBy('name', 'ASC');
    $faculties_result = $faculties_query->execute();

    $faculties = array();
    foreach ($faculties_result['taxonomy_term'] as $faculty) {
      $faculty_term = entity_metadata_wrapper(taxonomy_term, taxonomy_term_load($faculty->tid));
      $faculty_info = array(
        'name' => $faculty_term->field_display_name->value(array('sanitize' => TRUE)),
        'department_rep' => array(
          'name' => $faculty_term->field_department_rep_name->value(array('sanitize' => TRUE)),
          'phone' => $faculty_term->field_department_rep_phone->value(array('sanitize' => TRUE)),
          'email' => $faculty_term->field_department_rep_email->value(array('sanitize' => TRUE)),
        ),
        'library_liaison' => array(),
      );

      $liaison_query = new EntityFieldQuery();
      $liaison_query->entityCondition('entity_type', 'user')
      ->fieldCondition('field_library_liason', 'tid', $faculty->tid, '=');
      $liaison_result = $liaison_query->execute();

      $faculty_info['library_liaison'] = _get_user_info_from_uid(array_keys($liaison_result['user'])[0]);
      $faculties[] = $faculty_info;
    }

    $liaison_list[$campus_id] = $faculties;
  }

  print json_encode($liaison_list);

  return;
}

function _get_user_info_from_uid($uid, $options=array()) {
  if(is_null($uid)) {
    return new ArrayObject();
  }

  $user = entity_metadata_wrapper('user', user_load($uid));
  $info = array_merge(array(
    'first_name' => $user->field_first_name->value(array('sanitize' => TRUE)),
    'last_name' => $user->field_last_name->value(array('sanitize' => TRUE)),
    'position' => $user->field_position_title->value(array('sanitize' => TRUE)),
    'phone' => $user->field_phone_number->value(array('sanitize' => TRUE)),
    'on_leave' => $user->field_on_leave->value(),
    'email_id' => explode("@", $user->mail->value)[0],
    'head' => FALSE,
  ), $options);

  return $info;
}
